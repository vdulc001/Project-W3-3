
import edu.odu.cs.zeil.report_accumulator.ReportStats 

buildscript {
    repositories {
        ivy { // for report-accumulator
            url 'https://www.cs.odu.edu/~zeil/ivyrepo'
        }
	}
    dependencies {
        classpath "org.jbake:jbake-gradle-plugin:5.0.0"
        classpath 'edu.odu.cs.zeil:report_accumulator:1.2'
    }
}

plugins {
	id 'java'
	id "org.xbib.gradle.plugin.jflex" version "1.5.0"
    id "org.xbib.gradle.plugin.git" version "2.0.0"
}

java {
     sourceCompatibility = JavaVersion.toVersion(11)
     targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
	     jcenter()
	     ivy { 
          url 'https://www.cs.odu.edu/~zeil/ivyrepo'
      }
}

dependencies {
    compile 'edu.odu.cs.cs350:sourcedSuffixTrees:1.4+'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'junit:junit:4.13.2' 
        //compile 'edu.odo.cs.cs350:sourceSuffixTrees:1.4+'
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.CommandLineProcessor'
    }
	baseName 'DupDetector'
}

test {
     ignoreFailures = true
     useJUnitPlatform()
}

task reports (dependsOn: ['test', 'javadoc']){
    description 'Ensures "test" and "javadoc" tasks are executed'
    doLast{
        println '"test" and "javadoc" tasks successful'
    }
}

task clonePages() { 
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString() + '/..'
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = 'file:' + thisRepo
            bare = false
            refToCheckout = 'gh-pages'
        }
        grgit.checkout {
            branch = 'gh-pages'
        }
        grgit.close()
    }
}

task copyWebsite (dependsOn: ['reports', 'clonePages']) {
    doLast {
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'build/reports')
        }
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'build/docs')
        }
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'src/main/html')
        }
    }
}

task updateGHPages (dependsOn: ['copyWebsite']) {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        def grgit = git.open {
            dir = pagesDir
        }
        grgit.add (update: false, patterns: ['javadoc', 'tests', 'index.md'])
        grgit.add (update: true, patterns: ['javadoc', 'tests', 'index.md'])
        grgit.commit {
            message = "Updating web pages"
        }
        grgit.push {}
        grgit.close()
    }
}

task deployReports (dependsOn: 'updateGHPages') {
    doLast {
        exec {
            workingDir ='.'
            commandLine = ['git', 'push', 'origin', 'gh-pages']
        }
    }
}

task collectStats (type: ReportStats, dependsOn: ['build','reports']) {
    description "Collect statistics from various reports & analysis tools"
    reportsURL = 'https://www.cs.odu.edu/~zeil/gitlab/' + project.name + '/reports'
}

apply plugin: 'org.jbake.site'
plugins {
	id 'java'
	id "org.xbib.gradle.plugin.jflex" version "1.5.0"
	id "org.jbake.site" version "5.5.0"
}

java {
     sourceCompatibility = JavaVersion.toVersion(11)
     targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
	     jcenter()
	     ivy { 
          url 'https://www.cs.odu.edu/~zeil/ivyrepo'
      }
}

dependencies {
	     testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	     testImplementation 'org.hamcrest:hamcrest-library:2.2'
     	 compile 'edu.odu.cs.cs350:sourceSuffixTrees:1.4+'
}

test {
     ignoreFailures = true
     useJUnitPlatform()
}

test.ignoreFailures=true
check.dependsOn htmlDependencyReport

task reports (dependsOn: ['javadoc', 'check']) {
    description 'Generate all reports for this project'
}


task copyJDocs (type: Copy) {
    from 'build/docs'
    into 'build/tmp/website/assets'
    dependsOn 'javadoc'
}

task copyReports (type: Copy) {
    from 'build/reports'
    into 'build/tmp/website/assets'
    dependsOn 'reports'
}

task copyJbakeTemplates (type: Copy) {
    from 'src/jbake'
    into 'build/tmp/website'
}

task buildHomePage (dependsOn: copyJbakeTemplates) {
	 inputs.files ( 'build/tmp/website/content/home0.md', '../README.md')
	 outputs.file ( 'build/tmp/website/content/home.md' )
	 doLast  {
	     outputs.files.singleFile.withOutputStream { out ->
	         for ( file in inputs.files ) file.withInputStream {
		 	     out << it << '\n' }
	    }
	 }
}

jbake {
	 srcDirName = "build/tmp/website"
}

task setupWebsite (dependsOn: ['buildHomePage', 'copyReports', 'copyJDocs']){
}

bake.dependsOn "setupWebsite"
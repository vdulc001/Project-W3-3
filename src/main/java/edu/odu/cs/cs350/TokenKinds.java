package edu.odu.cs.cs350;

/**
 * All possible C++ token types.
 * 
 * @author cs_jrosa005
 *
 */
public enum TokenKinds {
	ALIGNAS, ALIGNOF, AND, AND_EQ, ASM, ATOMIC_CANCEL, ATOMIC_COMMIT, 
	ATOMIC_NOEXCEPT,  AUTO, BITAND, BITOR, BOOL, BREAK, CASE, CATCH,
	CHAR, CHAR8_T, CHAR16_T, CHAR32_T, CLASS, COMPL, CONCEPT, CONST, 
	CONSTEVAL, CONSTEXPR, CONSTINIT, CONST_CAST, CONTINUE, CO_AWAIT,
	CO_RETURN, CO_YIELD, DECLTYPE, DEFAULT, DELETE, DO, DOUBLE, DYNAMIC_CAST,
	ELSE, ENUM, EXPLICIT, EXPORT, EXTERN, FALSE, FLOAT, FOR, FRIEND, GOTO,
	IF, INLINE, INT, LONG, MUTABLE, NAMESPACE, NEW, NOEXCEPT, NOT, NOT_EQ,
	PRIVATE, PROTECTED, PUBLIC, RELFEXPR, REGISTER, REINTERPRET_CAST, REQUIRES,
	RETURN, SHORT, SIGNED, SIZEOF, STATIC, STATIC_ASSERT, STATIC_CAST, STRUCT,
	SWITCH, SYNCHRONIZED, TEMPLATE, THIS, THREAD_LOCAL, THROW, TRUE, TRY,
	TYPEDEF, TYPEID, TYPENAME, UNION, UNSIGNED, USING, VIRTUAL, VOID,
	VOLATILE, WCHAR_T, WHILE, XOR, XOR_EQ, NULL_LITERAL, OR_EQ, LPAREN, 
	RPAREN, LBRACE, RBRACE, LBRACK, RBRACK, SEMICOLON, COMMA, DOT,EQ, GT, 
	LT, NOT_OP, COMP, QUESTION, EQEQ, LTEQ, GTEQ, NOTEQ, ANDAND, OROR,
	PLUSPLUS, MINUSMINUS, PLUS, MINUS, MULT, DIV, AND_OP, OR, XOR_OP, MOD,
	LSHIFT, RSHIFT, PLUSEQ, MINUSEQ, MULTEQ, DIVEQ, ANDEQ, OREQ, XOREQ, MODEQ,
	LSHIFTEQ, RSHIFTEQ, SCOPE, MEMBERACCESS, ACCESSPTR, ACCESSPTRDOT,
	STRING, INTEGER_LITERAL, IDENTIFIER, EOF, NULLPTR, OPERATOR, REFLEXPR, 
	CAST, PREPROCESSOR, CIN, COUT};

